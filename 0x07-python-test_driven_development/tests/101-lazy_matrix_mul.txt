>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

# Test for correct output
>>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[ 7 10]
 [15 22]]

>>> print(lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13 16]]

# Test for invalid input types
>>> lazy_matrix_mul(10, [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> lazy_matrix_mul([[1, 2], [3, 4]], 10)
Traceback (most recent call last):
...
TypeError: m_b must be a list

>>> lazy_matrix_mul("string", [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> lazy_matrix_mul([[1, 2], [3, 4]], "string")
Traceback (most recent call last):
...
TypeError: m_b must be a list

# Test for non-list of lists
>>> lazy_matrix_mul([1, 2, 3], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> lazy_matrix_mul([[1, 2], [3, 4]], [1, 2, 3])
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

# Test for empty matrices
>>> lazy_matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> lazy_matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

# Test for matrices with invalid content
>>> lazy_matrix_mul([[1, "two"], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], ["three", 4]])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

# Test for non-rectangular matrices
>>> lazy_matrix_mul([[1, 2, 3], [4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size

>>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size

# Test for matrices that cannot be multiplied
>>> lazy_matrix_mul([[1, 2, 3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied
